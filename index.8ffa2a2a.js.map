{"mappings":"sgBAAAA,EAAA,S,8BAKA,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,sBACnCC,SAAUF,SAASC,cAAc,sBACjCE,iBAAkBH,SAASC,cAAc,uBACzCG,UAAWJ,SAASC,cAAc,+BAEpC,IAAII,EAAU,GAgBd,SAASC,EAAmBC,GAC1BT,EAAKI,SAASM,UAAUC,OAAO,aAC/BX,EAAKM,UAAUI,UAAUC,OAAO,aAChCT,SAASU,KAAKC,MAAMC,SAAW,SAC/BZ,SAASa,iBAAiB,UAAWC,GACrCd,SAASa,iBAAiB,QAASE,GACnC,MAAMC,EAAST,EAAMU,OAAOC,QAAQC,GACpCd,EAAUW,EAsBZI,eAA4BJ,GAC1B,MAAMK,GAAO,EAAAC,EAAAC,eAAcP,GAC3BQ,QAAQC,IAAIT,EAAS,gBACrBQ,QAAQC,IAAIJ,EAAO,QACZA,EACJK,MAAKC,IACJH,QAAQC,IAAIE,GACZ,IAAIC,EAxBV,SAA0BD,GACxB,MAAMR,EAAKQ,EAAKR,GACVU,EAAgBF,EAAKG,QAAQC,MACjCC,GAA4B,qBAAjBA,EAAQC,OAErBT,QAAQC,IAAII,GACZL,QAAQC,IAAIE,EAAKR,IACjB,MAAMe,EAAaL,EAAcM,IACjCX,QAAQC,IAAIS,GACZ,MAAME,EAAM,iCAAiCF,IAC7C,GAAIf,EAEF,OADAK,QAAQC,IAAIN,GACL,yCAAyCiB,+C,CAY1BC,CAAiBV,GAIrC,OAHAH,QAAQC,IAAIG,GACZ9B,EAAKK,iBAAiBmC,UAAYV,EAClCJ,QAAQC,IAAIE,GACLA,CAAI,IAEZY,OAAMC,IACLhB,QAAQC,IAAIe,GACZ1C,EAAKK,iBAAiBmC,UAAY,oGACF,G,CArCpCG,CAAazB,GACbQ,QAAQC,IAAIT,E,CAwCd,SAAS0B,EAAoBnC,GAC3BT,EAAKI,SAASM,UAAUmC,IAAI,aAC5B7C,EAAKM,UAAUI,UAAUmC,IAAI,aAC7B3C,SAASU,KAAKC,MAAMC,SAAW,SAC/BZ,SAAS4C,oBAAoB,UAAW9B,GACxCd,SAAS4C,oBAAoB,QAAS7B,GACtCS,QAAQC,IAAI,Q,CAGd,SAASV,EAAgBR,GACnBA,EAAMU,SAAWnB,EAAKI,UACxBwC,G,CAGJ,SAAS5B,EAAcP,GACF,WAAfA,EAAMsC,MACRH,G,CA7EFI,YAAW,KACLC,EAAAC,sBACmBhD,SAASiD,eAAe,WAChCpC,iBAAiB,QAASP,E,GAExC,KAKLR,EAAKC,WAAWc,iBAAiB,QAAS6B,E","sources":["src/js/modal-trailer.js"],"sourcesContent":["import { API_KEY, BASE_URL, ID_URL } from './api-vars';\nimport { renderHeroRandomFilm } from './header';\nimport axios from 'axios';\nimport { getMovieById3 } from './api-service';\n\nconst refs = {\n  closeModal: document.querySelector('.modal__close__btn'),\n  Backdrop: document.querySelector('.backdrop__trailer'),\n  trailerContainer: document.querySelector('.trailer__container'),\n  ModalCont: document.querySelector('.modal__container__trailer'),\n};\nlet filmsId = '';\n\n//перевірка на наявність кнопки\nfunction renderModalCheck() {\n  setTimeout(() => {\n    if (renderHeroRandomFilm) {\n      const watchTrailer = document.getElementById('trailer');\n      watchTrailer.addEventListener('click', onOpenModalTrailer);\n    }\n  }, 1000);\n}\n\nrenderModalCheck();\n\nrefs.closeModal.addEventListener('click', onCloseModalTrailer);\n\nfunction onOpenModalTrailer(event) {\n  refs.Backdrop.classList.remove('is-hidden');\n  refs.ModalCont.classList.remove('is-hidden');\n  document.body.style.overflow = 'hidden';\n  document.addEventListener('keydown', onEscBtnPress);\n  document.addEventListener('click', onBackdropClick);\n  const filmID = event.target.dataset.id;\n  filmsId = filmID;\n  createMarkup(filmID);\n  console.log(filmID);\n}\n\nfunction addMarkupTrailer(data) {\n  const id = data.id;\n  const searchTrailer = data.results.find(\n    element => element.name === 'Official Trailer'\n  );\n  console.log(searchTrailer);\n  console.log(data.id);\n  const trailerKey = searchTrailer.key;\n  console.log(trailerKey);\n  const URL = `https://www.youtube.com/embed/${trailerKey}`;\n  if (id) {\n    console.log(id);\n    return `<iframe class =\"trailer__iframe\" src=\"${URL}\"  frameborder=\"0\" allowfullscreen></iframe>`;\n  }\n}\n// // const TRAILER_URL = `${BASE_URL}/movie/{movie_id}/videos`;\n\nasync function createMarkup(filmID) {\n  const film = getMovieById3(filmID);\n  console.log(filmID + 'createMarkup');\n  console.log(film + 'film');\n  return film\n    .then(data => {\n      console.log(data);\n      let trailerMarkup = addMarkupTrailer(data);\n      console.log(trailerMarkup);\n      refs.trailerContainer.innerHTML = trailerMarkup;\n      console.log(data);\n      return data;\n    })\n    .catch(error => {\n      console.log(error);\n      refs.trailerContainer.innerHTML = `<p>We are very sorry! But we couldn’t find the trailer.</p>\n     <div class = \"no_trailer\"></div>`;\n    });\n}\n\nfunction onCloseModalTrailer(event) {\n  refs.Backdrop.classList.add('is-hidden');\n  refs.ModalCont.classList.add('is-hidden');\n  document.body.style.overflow = 'scroll';\n  document.removeEventListener('keydown', onEscBtnPress);\n  document.removeEventListener('click', onBackdropClick);\n  console.log('click');\n}\n\nfunction onBackdropClick(event) {\n  if (event.target === refs.Backdrop) {\n    onCloseModalTrailer();\n  }\n}\nfunction onEscBtnPress(event) {\n  if (event.code === 'Escape') {\n    onCloseModalTrailer();\n  }\n}\n"],"names":["parcelRequire","$08461d082de52db9$var$refs","closeModal","document","querySelector","Backdrop","trailerContainer","ModalCont","$08461d082de52db9$var$filmsId","$08461d082de52db9$var$onOpenModalTrailer","event","classList","remove","body","style","overflow","addEventListener","$08461d082de52db9$var$onEscBtnPress","$08461d082de52db9$var$onBackdropClick","filmID","target","dataset","id","async","film","$7me8F","getMovieById3","console","log","then","data","trailerMarkup","searchTrailer","results","find","element","name","trailerKey","key","URL","$08461d082de52db9$var$addMarkupTrailer","innerHTML","catch","error","$08461d082de52db9$var$createMarkup","$08461d082de52db9$var$onCloseModalTrailer","add","removeEventListener","code","setTimeout","$bUb57","renderHeroRandomFilm","getElementById"],"version":3,"file":"index.8ffa2a2a.js.map"}