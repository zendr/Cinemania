{"mappings":"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","sources":["src/index.js","src/js/team.js","src/js/upcoming.js","src/js/weekly.js"],"sourcesContent":["import './js/api-vars';\nimport './js/spiner';\nimport './js/api-service';\nimport './js/teamModal';\nimport './js/team';\nimport './js/upcoming';\nimport './js/refs';\nimport './js/render';\nimport './js/my-library';\nimport './js/header';\nimport './js/btn-up';\nimport './js/weekly';\nimport './js/modal-descr';\nimport './js/modal-trailer';\n","export const teamMembers = [\n    {\n     name: \"Oleksandr Chernenko\",\nposition:\"Team Lead\",\nlink:\"https://github.com/zendr\",\nimg_jpg: \"/oleksand_ch.jpg\",\nimg_webp:\"/oleksandr_ch.webp\",   \n    },\n    {\n     name:\"Evgen Nechaev\",\nposition:\"Scrum Master\",\nlink:\"https://github.com/EvgNec\",\nimg_jpg: \"/Evgen.jpg\",\nimg_webp:\"/Evgen.webp\",  \n    },\n        {\n     name:\"Mariia Huziuk\",\nposition:\"Developer\",\nlink:\"https://github.com/maryhuziuk\",\nimg_jpg: \"/Mariia.jpg\",\nimg_webp:\"/Mariia.webp\",   \n    },\n        {\n     name:\"Artem Shapoval\",\nposition:\"Developer\",\nlink:\"https://github.com/TyomaShapoval\",\nimg_jpg: \"/Artem.jpg\",\nimg_webp:\"/Artem.webp\",   \n    },\n        {\n     name:\"Uliana Grynyshyn\",\nposition:\"Developer\",\nlink:\"https://github.com/Uliana2022ua\",\nimg_jpg: \"/Uliana.jpg\",\nimg_webp:\"/Uliana.webp\",   \n    },\n        {\n     name:\"Karina Tkachenko\",\nposition:\"Developer\",\nlink:\"https://github.com/Karina-98\",\nimg_jpg: \"/Karina.jpg\",\nimg_webp:\"/Karina.webp\",     \n    },\n        {\n     name:\"Pavlo Ponomarenko\",\nposition:\"Developer\",\nlink:\"https://github.com/PaulPonomarenko\",\nimg_jpg: \"/Pavlo.jpg\",\nimg_webp:\"/Pavlo.webp\",    \n    },\n        {\n     name:\"Viktor Yakymenko\",\nposition:\"Developer\",\nlink:\"https://github.com/chell-iz-naroda\",\nimg_jpg: \"/Viktor.jpg\",\nimg_webp:\"/Viktor.webp\",    \n    },\n        {\n     name:\"Oleksandr Piniugin\",\nposition:\"Developer\",\nlink:\"https://github.com/Piniuhin\",\nimg_jpg: \"/Oleksandr_Pin.jpg\",\nimg_webp:\"/Oleksandr_Pin.webp\",   \n    },\n        {\n     name:\"Maksym Karpiuk\",\nposition:\"Developer\",\nlink:\"https://github.com/Konoplya156\",\nimg_jpg: \"/Maksym.jpg\",\nimg_webp:\"/Maksum.webp\",     \n    }\n]","import Notiflix from 'notiflix';  \nimport axios from 'axios';\nimport {\n  API_KEY,\n  BASE_URL,\n  TREND_URL,\n  SEARCH_URL,\n  ID_URL,\n  IMG_BASE_URL,\n  IMG_W400,\n} from './api-vars';\nimport { addMovieToLibrary, removeMovieFromLibrary, getMovieFromLibrary} from './my-library';\n\nconst UPCOMING_URL = `${BASE_URL}/movie/upcoming`;\n\nconst upcomingBlock = document.querySelector('.container__upcoming');\n\nlet randomMovie;\nlet movieId;\nlet remindBtn;\n\n\n// FETCH FOR UPCOMIG MOVIES\n\nasync function fetchUpcomingMovies() {\n  return fetch(\n    `${UPCOMING_URL}?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(movieData => {\n    if (!movieData.ok) {\n      Notiflix.Notify.failure(`Sorry, there are no upcoming films for today`);\n      throw new Error(movieData.status);\n    }\n    return movieData.json();\n  });\n}\n\nfunction onClickRemind(event) {\n  movieId = event.target.dataset.movieid;\n  AddFilmToLibrary(movieId);\n  let titleMovie = randomMovie.title;\n  if (remindBtn.textContent !== 'Remove from Library') {\n    Notiflix.Notify.success(`\"${titleMovie}\" remove to the library`);\n    return;\n  }\n  Notiflix.Notify.success(`\"${titleMovie}\" added to the library`);\n}\n\nfunction AddFilmToLibrary(movieId) {\n  if (getMovieFromLibrary(movieId)) {\n    removeMovieFromLibrary(movieId);\n    remindBtn.textContent = \"Remind me\";\n  } else {\n    addMovieToLibrary(movieId);\n    remindBtn.textContent = \"Remove from Library\";\n  }\n}\n\n//Перевірка фільма у локольному сховищу та обробка  кнопки\nfunction changeBtnLibrary(movieId, remindBtn) {\n  if (getMovieFromLibrary(movieId)) {\n    remindBtn.textContent = \"Remove from Library\";\n  } else {\n    remindBtn.textContent = \"Remind me\";\n  }\n}\n\nasync function getFetchedMovies() {\n  try {\n    const data = await fetchUpcomingMovies();\n    const returnedResult = data.results;\n\n    if (returnedResult.length >= 1) {\n      randomMovie =\n        returnedResult[Math.floor(Math.random() * returnedResult.length)];\n      const genreNames = await getGenresById(randomMovie.genre_ids);\n      const createdMarkup = await renderMarkup({ ...randomMovie, genreNames });\n      upcomingBlock.insertAdjacentHTML('beforeend', createdMarkup);\n      remindBtn = document.querySelector('.upcoming__remindme--btn');\n      changeBtnLibrary(movieId, remindBtn);\n      remindBtn.addEventListener('click', onClickRemind);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\ngetFetchedMovies();\n\nasync function renderMarkup({\n  id,\n  poster_path,\n  backdrop_path,\n  title,\n  overview,\n  popularity,\n  vote_average,\n  vote_count,\n  release_date,\n  genre_ids,\n}) {\n  const genreNames = await getGenresById(genre_ids);\n\n  return `\n    \n <div class=\"upcoming__card\">\n <div class=\"upcoming__thumb\">\n      \n      <picture class='.upcoming__poster'>\n      <source srcset=\"https://image.tmdb.org/t/p/original/${backdrop_path}\" media=\"(min-width: 1200px)\" class='upcoming__poster-desktop' />\n      <source srcset=\"https://image.tmdb.org/t/p/original/${backdrop_path}\" media=\"(min-width: 768px)\" class='upcoming__poster-tablet' />\n      <source srcset=\"https://image.tmdb.org/t/p/original/${poster_path}\" media=\"(min-width: 320px)\" />\n      <img src=\"https://image.tmdb.org/t/p/original/${poster_path}\" alt=\"Movie Poster\" style='width: 805px'/>\n    </picture>\n      </div>\n      </div>\n\n<div class=\"upcoming__info\">\n            <h2 class=\"upcoming__info--title\">${title}</h2>\n            <div class=\"upcoming__movie\">\n                <div class=\"upcoming__info--left\">\n                    <div class=\"upcoming__info--release\">\n                        <p class=\"upcoming__text\"> <span class =\"upcoming__light--black\">Release date</span> <span class=\"upcoming__info--release--date\">${release_date}</span></p>\n                    </div>\n                    <div class=\"upcoming__info--vote\">\n                        <p class=\"upcoming__text\"><span class =\"upcoming__light--black\">Vote/Votes</span>\n                        <div class=\"upcoming__info--votes\"><span class=\"upcoming__info--white\">${vote_average}</span> <span\n                                class=\"slash\">/</span>\n                            <span class=\"upcoming__info--white\">\n                               ${vote_count}</span>\n                        </div>\n                        </p>\n                    </div>\n                </div>\n                <div class=\"upcoming__info--right\">\n                    <div class=\"upcoming__info--pop\">\n                        <p class=\"upcoming__text\"> <span class =\"upcoming__light--black\">Popularity</span> <span class=\"upcoming__info--pop--range\">${popularity}</span> </p>\n                    </div>\n                    <div class=\"upcoming__info--genre\">\n                        <p class=\"upcoming__text\"><span class =\"upcoming__light--black\">Genre</span> <span class=\"upcoming__info--genre--kind\">${genreNames}</span> </p>\n                    </div>\n                </div>\n            </div>\n            <h2 class=\"upcoming__info--about\">ABOUT</h2>\n\n            <p class=\"upcoming__info--description\">${overview}</p>\n            <button class=\"upcoming__remindme--btn\" data-movieid=${id}  type=\"button\">Remind me</button>\n        </div>\n\n   \n     `;\n}\n\nasync function getGenresById(genreIds) {\n  const API_KEY = '249f222afb1002186f4d88b2b5418b55';\n  const BASE_URL = `https://api.themoviedb.org/3/genre/movie/list`;\n\n  const response = await fetch(`${BASE_URL}?api_key=${API_KEY}&language=en-US`);\n  const data = await response.json();\n\n  const genreNames = genreIds.map(genreId => {\n    const genre = data.genres.find(genre => genre.id === genreId);\n    return genre.name;\n  });\n\n  return genreNames.join(', ');\n}\n\n","const URL = 'https://api.themoviedb.org/3/trending/movie/week?api_key=249f222afb1002186f4d88b2b5418b55';\n\nimport axios from \"axios\";\nimport { IMG_BASE_URL, BASE_URL, IMG_W400, API_KEY } from './api-vars';\n \nconst galleryList = document.querySelector(\".gallery-weekly__list\");\n\nfunction getTrendData() {\nconst URL = 'https://api.themoviedb.org/3/trending/movie/week?api_key=249f222afb1002186f4d88b2b5418b55';\n\n    return axios.get(URL).then((data) => {\n        //  incrementPage();\n         \n         return data.data\n      })\n} \n\nasync function getMovieGenres() {\n  const { data } = await axios.get(\n    `${BASE_URL}/genre/movie/list?api_key=${API_KEY}`\n    );\n  return data;\n}\n\n// export async function getGenres() {\n//     const genres = await getMovieGenres().then(({ genres }) => genres);\n//     // console.log(genres);\n//   for (const genre of genres) {\n//     // console.log(genre);\n//     const { id, name } = genre;\n//     const fullName = await getTrendData().then(({ results }) => results);\n//     const oneCard = fullName.forEach(result => {\n//       // console.log(result.genre_ids);\n//       const genre_ids = result.genre_ids;\n//       if (genre_ids.length > 2) {\n//         const sliceGanre = genre_ids.slice(0, 2);\n//         // console.log(sliceGanre);\n//         if (sliceGanre.includes(genre.id)) {\n//           console.log(genre.name);\n//           const ganreName = genre.name;\n//         }\n//       }\n//     })\n      \n//     const createMarkup = createMarkup(results);\n// return galleryList.innerHTML = createMarkup\n  // }\n\n\n  \n// }\n\nexport async function getGenres() {\n  const genres = await getMovieGenres().then(({ genres }) => genres);\n\n  return { genres };\n}\n\n// В createMarkup добавлен id и его вывод на карточку для работы модалки Евгения --- Виктор\nfunction renderMarkup(results) {\n  //  console.log(results);\n   getGenres().then(({ genres }) => {\n    // console.log(genres);\n    if (results) {\n      results.forEach(film => {\n        const { genre_ids, release_date } = film;\n        genres.forEach(({ name, id }) => {\n          if (genre_ids.includes(id)) {\n            if (genre_ids.length > 2) {\n              genre_ids.splice(2, genre_ids.length - 1);\n            }\n            genre_ids.splice(genre_ids.indexOf(id), 1, name);\n          }\n          film.genre_names = genre_ids.join(', ');\n          if (film.release_date) {film.release_date = release_date.slice(0, 4);}\n        });\n      });\n      const markupList = createMarkup(results);\n    if (galleryList) {\n      galleryList.innerHTML = markupList;\n      // console.log(markupList);\n    }\n    }\n  });\n}\n \n\nfunction createMarkup(results) {\n  // console.log(results);\n  return results.slice(0, 3).map(({ original_title, release_date, genre_ids, poster_path, vote_average, id}) => {\n    let posterIMG = ``;\n    if (poster_path) {\n      posterIMG = `${IMG_BASE_URL}${IMG_W400}${poster_path}`;\n    } else {\n      posterIMG = 'https://i.ibb.co/C0LFwTh/OIF.jpg';\n    }\n\n    let starIcons = '';\n    for (let i = 1; i <= 5; i++) {\n      let starClass = 'fa-star-o';\n      if (i * 2 < vote_average) {\n        starClass = 'fa-star';\n      } else if (i * 2 - 1 < vote_average) {\n        starClass = 'fa-star-half-o';\n      }\n      starIcons += `<span class=\"fa star ${starClass}\"> </span>`;\n    }\n    return  ` <li class='gallery-weekly__list-elem hover-cursor' data-id='${id}'>           \n        <img class='gallery-weekly__image' src=\"${posterIMG}\" alt=\"${original_title}\" loading=\"lazy\" data-id='${id}'>\n       <div class='gallery-weekly__all-info'> \n        <div class=\"gallery-weekly__info\">\n            <h3 class= 'gallery-weekly__title'>${original_title}</h3>\n            <div class='cards-list_second_line'>\n              <div class='cards-list__text'>\n                <p>${genre_ids} | ${release_date}</p>\n              </div>\n            </div>\n        </div>\n        <div class='star-rate'>\n                ${starIcons}\n        </div>\n      </div>\n    </li>`\n  }).join('') \n\n//    return galleryList.insertAdjacentElement(\"beforeend\", markup);\n    // return galleryList.innerHTML = markup\n    // return console.log(markup)\n      \n    // return markup;\n}\n\n// getTrendData().then(({ results }) => {\n//     // console.log(results.genre_ids)\n//      return createMarkup(results);\n   \n// })\n\nexport const getWeeklyTrends = getTrendData().then(({ results }) => {\n    // console.log(results)\n    return renderMarkup(results);\n})\n\n\n"],"names":["parcelRequire","$4c6aab06649ec8ef$var$randomMovie","$4c6aab06649ec8ef$var$movieId","$4c6aab06649ec8ef$var$remindBtn","$bpxeT","$4c6aab06649ec8ef$var$UPCOMING_URL","concat","$ajzNc","BASE_URL","$4c6aab06649ec8ef$var$upcomingBlock","document","querySelector","$4c6aab06649ec8ef$var$fetchUpcomingMovies","$4c6aab06649ec8ef$var$_fetchUpcomingMovies","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","fetch","API_KEY","then","movieData","ok","$6JpON","Notify","failure","Error","status","json","$4c6aab06649ec8ef$var$onClickRemind","event","movieId1","target","dataset","movieid","$g4hZ6","getMovieFromLibrary","removeMovieFromLibrary","textContent","addMovieToLibrary","titleMovie","title","success","$4c6aab06649ec8ef$var$changeBtnLibrary","movieId2","remindBtn1","$4c6aab06649ec8ef$var$_getFetchedMovies","data","returnedResult","genreNames","createdMarkup","_ctx","sent","results","length","Math","floor","random","$4c6aab06649ec8ef$var$getGenresById","genre_ids","$4c6aab06649ec8ef$var$renderMarkup","$dDDEV","insertAdjacentHTML","addEventListener","console","log","t0","_","$4c6aab06649ec8ef$var$_renderMarkup","param","id","poster_path","backdrop_path","overview","popularity","vote_average","vote_count","release_date","genreIds","$4c6aab06649ec8ef$var$_getGenresById","response","map","genreId","genres","find","genre","name","join","$4c6aab06649ec8ef$var$getFetchedMovies","$7efa00ec3586167e$var$galleryList","$7efa00ec3586167e$var$getMovieGenres","$7efa00ec3586167e$var$_getMovieGenres","$dIxxU","default","get","$7efa00ec3586167e$var$_getGenres","genres1","$7efa00ec3586167e$var$renderMarkup","$7efa00ec3586167e$export$c5604fa8028da00","param1","forEach","film","includes","splice","indexOf","genre_names","slice","markupList","original_title","posterIMG","IMG_BASE_URL","IMG_W400","starIcons","i","starClass","$7efa00ec3586167e$var$createMarkup","innerHTML"],"version":3,"file":"index.1ca09a9b.js.map"}